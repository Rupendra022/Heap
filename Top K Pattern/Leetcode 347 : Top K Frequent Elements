class Pair {
    int ele;
    int freq;

    Pair(int ele, int freq) {
        this.ele = ele;
        this.freq = freq;
    }
}

class Solution {
    public int[] topKFrequent(int[] arr, int k) {

        int[] ans = new int[k];

        PriorityQueue<Pair> pq = new PriorityQueue<>((a, b) -> a.freq - b.freq);

        HashMap<Integer, Integer> map = new HashMap<>();

        for (int i = 0; i < arr.length; i++) {
            map.put(arr[i], map.getOrDefault(arr[i], 0) + 1);
        }

        for (int key : map.keySet()) {
            int freq = map.get(key);
            pq.add(new Pair(key, freq));

            if (pq.size() > k) {
                pq.poll();
            }
        }

        int i = 0;
        while (pq.size() > 0) {
            Pair p = pq.poll();
            ans[i++] = p.ele;
        }

        return ans;
    }
}
